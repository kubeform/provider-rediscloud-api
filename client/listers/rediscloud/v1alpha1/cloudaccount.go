/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-rediscloud-api/apis/rediscloud/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudAccountLister helps list CloudAccounts.
// All objects returned here must be treated as read-only.
type CloudAccountLister interface {
	// List lists all CloudAccounts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CloudAccount, err error)
	// CloudAccounts returns an object that can list and get CloudAccounts.
	CloudAccounts(namespace string) CloudAccountNamespaceLister
	CloudAccountListerExpansion
}

// cloudAccountLister implements the CloudAccountLister interface.
type cloudAccountLister struct {
	indexer cache.Indexer
}

// NewCloudAccountLister returns a new CloudAccountLister.
func NewCloudAccountLister(indexer cache.Indexer) CloudAccountLister {
	return &cloudAccountLister{indexer: indexer}
}

// List lists all CloudAccounts in the indexer.
func (s *cloudAccountLister) List(selector labels.Selector) (ret []*v1alpha1.CloudAccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudAccount))
	})
	return ret, err
}

// CloudAccounts returns an object that can list and get CloudAccounts.
func (s *cloudAccountLister) CloudAccounts(namespace string) CloudAccountNamespaceLister {
	return cloudAccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudAccountNamespaceLister helps list and get CloudAccounts.
// All objects returned here must be treated as read-only.
type CloudAccountNamespaceLister interface {
	// List lists all CloudAccounts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CloudAccount, err error)
	// Get retrieves the CloudAccount from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CloudAccount, error)
	CloudAccountNamespaceListerExpansion
}

// cloudAccountNamespaceLister implements the CloudAccountNamespaceLister
// interface.
type cloudAccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudAccounts in the indexer for a given namespace.
func (s cloudAccountNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudAccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudAccount))
	})
	return ret, err
}

// Get retrieves the CloudAccount from the indexer for a given namespace and name.
func (s cloudAccountNamespaceLister) Get(name string) (*v1alpha1.CloudAccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudaccount"), name)
	}
	return obj.(*v1alpha1.CloudAccount), nil
}
